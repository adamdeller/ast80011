The file names starting with alka_ include Python codes, made to help study the Large Magellanic Cloud (LMC) and Sagittarius Dwarf Spheroidal Galaxy (Sgr)
induced signatures on the Milky Way (MW) disk.

The data used are in CSV format and are downloaded from the GI Simulator. Note that the downloaded CSV data first need cleaning up; after opening the CSV file,
first remove all the headers, then at the top of each column, insert the name of the values included in the column. For example, the first column is mass,
the second column is x, the third column is y, the fourth column is z, the fifth column is vx, the sixth column is vy, and the seventh column is vz.
The x, y, z, are the distances of the disk particles from the galactic center (centred at x = y = z = 0) and vy, vy, vz are the vertical velocities of the
disk particles in the x, y, z directions.

Before you type the codes in Python, make sure you have installed all the necessary libraries, such as numpy, pandas, etc.

All the plots are colour-coded to help better analyse the large scale morphology and kinematics of the MW disk particles.

The 'alka_MH_FaceOn' file contains the Python code to calculate and plot the face-on (x-y) Mean Height (z-bar) map of the MW disk particles.

The 'alka_MRV_FaceOn' file contains the Python code to calculate and plot the face-on (x-y) Mean Radial Velocity (Vr) map of the MW disk particles.

The 'alka_MSMD_EdgeOn' file contains the Python code to calculate and plot the edge-on (x-z) Mean Stellar Mass Density map of the MW disk particles.

The 'alka_MSMD_FceOn' file contains the Python code to calculate and plot the face-on (x-y) Mean Stellar Mass Density map of the MW disk particles.

The 'alka_MVV_FaceOn' file contains the Python code to calculate and plot the face-on (x-y) Mean Vertical Velocity map of the MW disk particles.

Below is an example showing  a sample CSV data of the isolated Milky Way disk, downloaded from the GI Simulator, the command line invocation needed
to run and the expected output.

I have used Python 3.313 (64-bit) to run these codes. 

Note that you should not paste the entire text containing multiple lines into your shell, otherwise it results in the unexpected execution of command. 
So, you ought to type in each command line individually, exactly as they appear in the codes.

# Sample CSV data of the isolated Milky Way disk:
Note that this is only a sample containing the first 10 rows 
out of the original 20,0000 rows, because my MW disk model is made up of 20,000 particles.
---------------------------------------------------------------------------------------------
mass	         x	         y	      z	        vx	           vy	          vz
4.35E-05	-1.08E+00	-1.52E+00	1.55E-01	8.26E-01	-5.18E-01	-6.04E-02
4.35E-05	-5.80E-01	-9.37E-02	7.21E-02	3.69E-01	-8.99E-01	-5.26E-02
4.35E-05	1.90E+00	4.76E-01	1.30E-01	-2.54E-01	9.76E-01	-1.39E-02
4.35E-05	-2.75E+00	-1.89E+00	-4.07E-02	4.77E-01	-8.17E-01	-3.06E-02
4.35E-05	3.65E-01	-3.51E+00	1.51E-01	9.26E-01	-5.06E-02	-2.21E-02
4.35E-05	-3.22E+00	-1.75E+00	-1.77E-01	3.06E-01	-7.46E-01	-2.92E-02
4.35E-05	-9.11E-01	-1.43E+00	9.84E-03	9.87E-01	-3.98E-01	1.86E-02
4.35E-05	-1.05E+00	2.21E+00	-1.48E-01	-8.05E-01	-3.25E-01	2.79E-02
4.35E-05	-1.48E+00	-8.65E-01	5.59E-02	4.71E-01	-6.10E-01	-2.35E-01
4.35E-05	-1.23E+00	-5.08E-01	-1.02E-01	3.35E-01	-8.35E-01	7.87E-02


For example, in order to generate the Milky Way disk mean stellar mass density maps, I used the codes included 
in the alka_MSMD_FaceOn and alka_MSMD_EdgeOn files to generate the face-on (x-y) and edge-on(x-z) maps, respectively. 
To calculate and map the mean stellar mass density of the disk, only the values for mass, x, y, and z from the CSV file are used.
Mean of all the masses of the disk particles which fall within each pixel of 1 kpc in size (bin) is fisrt calculated, then
a colour-coded map is generated, including a colour-coded side-bar scale showing the mean stellar mass density in the disk
in units of 10^11 Mâ˜‰ / kpc^2. The face-on map shows the Milky Way disk mean stellar mass density maps on the x-y plane 
and the edge-on map shows the disk on the x-z plane. 

Another example is calculating and mapping the mean vertical velocity of the disk particles. 
To calculate and face-on map the mean vertical velocity of the disk particles, only the values for vertical velocity (vz), x and y
from the CSV file are used. For this purpose, I used the Python code included in the alka_MVV_FaceOn.
The Pythod code first calculates mean of all the vertical velocitos of the disk particles which fall within each pixel of 1 kpc in size (bin),
then  generates a plot showing a colour-coded mean vertical velocity map of the Milky Way disk particles, including a colour-coded side bar scale
illustrating the mean vertical velocity of the disk particles in km/sec. The negative values (blue) represent downward motion and the positive values
(red) represent upward motion. 


  


